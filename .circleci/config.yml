version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@11
  slack: circleci/slack@4.12.5

parameters:
  alerts-slack-channel:
    type: string
    default: manage_a_workforce_dev

  releases-slack-channel:
    type: string
    default: manage_a_workforce_dev

  node-version:
    type: string
    default: 22.16-browsers

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export GIT_REF="$CIRCLE_SHA1"
            npm run record-build-info
      - run:
          # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - build
            - dist
            - .cache/Cypress

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html

  integration_test:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: '6.2'
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run auth wiremock
          command: java -jar wiremock.jar --port 9090
          background: true
      - run:
          name: Run allocation wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Run workload wiremock
          command: java -jar wiremock.jar --port 9092
          background: true
      - run:
          name: Run probation estate wiremock
          command: java -jar wiremock.jar --port 9093
          background: true
      - run:
          name: Run user preference wiremock
          command: java -jar wiremock.jar --port 9094
          background: true
      - run:
          name: Run staff lookup wiremock
          command: java -jar wiremock.jar --port 9095
          background: true
      - run:
          name: Run manage users wiremock
          command: java -jar wiremock.jar --port 9096
          background: true
      - run:
          name: Build the app
          command: npm run build
      - run:
          name: Run the node app.
          command: cd ~/app && npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration_tests/videos
      - store_artifacts:
          path: integration_tests/screenshots

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
                - /epic.*/
      - request-dev-approval:
          type: approval
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker
          filters:
            branches:
              only:
                - main
                - /epic.*/
      - hmpps/deploy_env:
          name: deploy_dev
          env: 'dev'
          jira_update: true
          jira_env_type: development
          context: hmpps-common-vars
          helm_timeout: 5m
          filters:
            branches:
              only:
                - main
                - /epic.*/
          requires:
            - request-dev-approval
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: 'preprod'
          jira_update: true
          jira_env_type: staging
          context:
            - hmpps-common-vars
            - manage-a-workforce-ui-preprod
          helm_timeout: 5m
          filters:
            branches:
              only:
                - main
                - /epic.*/
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_prod
          env: 'prod'
          jira_update: true
          jira_env_type: production
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - manage-a-workforce-ui-prod
          helm_timeout: 5m
          requires:
            - request-prod-approval
          filters:
            branches:
              only:
                - main

  security:
    triggers:
      - schedule:
          cron: '40 5 * * 1-5'
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          node_tag: << pipeline.parameters.node-version >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: '10 5 * * 1'
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
