---
generic-service:
  nameOverride: manage-a-workforce-ui

  replicaCount: 2

  image:
    repository: quay.io/hmpps/manage-a-workforce-ui
    tag: app_version    # override at deployment time
    port: 3000

  ingress:
    enabled: true
    modsecurity_enabled: true
    v1_2_enabled: true
    v0_47_enabled: false
    host: app-hostname.local    # override per environment
    tlsSecretName: manage-a-workforce-ui-cert
    path: /
    contextColour: green
    modsecurity_snippet: |
      SecRuleEngine On
      SecRuleUpdateActionById 949110 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecRuleUpdateActionById 959100 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecRuleRemoveById 942430
      SecRuleRemoveById 942210
      SecRuleRemoveById 950100
      SecRuleUpdateTargetById 942440 "!REQUEST_COOKIES:/connect.sid/"
      SecRuleUpdateTargetById 942450 "!REQUEST_COOKIES:/connect.sid/"
      SecRuleUpdateTargetById 930120 "!REQUEST_COOKIES:/connect.sid/"
      SecRuleUpdateTargetById 942210 "!REQUEST_COOKIES:/connect.sid/"
      SecRule REQUEST_URI "@endsWith /confirm-allocation" \
        "id:1004,\
        phase:1,\
        pass,\
        nolog,\
        ctl:ruleRemoveTargetByTag=attack-sqli;ARGS:instructions"
      SecRule REQUEST_URI "@endsWith /confirm-allocation" \
        "id:1005,\
        phase:1,\
        pass,\
        nolog,\
        ctl:ruleRemoveTargetByTag=platform-windows;ARGS:instructions"
      SecAction \
        "id:900000,\
        phase:1,\
        nolog,\
        pass,\
        t:none,\
        setvar:tx.paranoia_level=2"
      SecRule REQUEST_URI "@endsWith /confirm-allocation" \
        "id:1006,\
        phase:1,\
        pass,\
        nolog,\
        ctl:ruleRemoveTargetByTag=attack-rce;ARGS:instructions"
      SecRuleUpdateTargetById 942440 "!ARGS:_csrf"


  livenessProbe:
    httpGet:
      path: /ping

  readinessProbe:
    httpGet:
      path: /ping

  # Environment variables to load into the deployment
  env:
    NODE_ENV: "production"
    REDIS_TLS_ENABLED: "true"
    TOKEN_VERIFICATION_ENABLED: "true"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    manage-a-workforce-ui:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      API_CLIENT_ID: "AUTH_API_CLIENT_ID"
      API_CLIENT_SECRET: "AUTH_API_CLIENT_SECRET"
      SESSION_SECRET: "SESSION_SECRET"
      GOOGLE_ANALYTICS_KEY: "GOOGLE_ANALYTICS_KEY"
    elasticache-redis:
      REDIS_HOST: "primary_endpoint_address"
      REDIS_AUTH_TOKEN: "auth_token"

  allowlist:
    office: "217.33.148.210/32"
    health-kick: "35.177.252.195/32"
    mojvpn: "81.134.202.29/32"
    cloudplatform-live1-1: "35.178.209.113/32"
    cloudplatform-live1-2: "3.8.51.207/32"
    cloudplatform-live1-3: "35.177.252.54/32"
    ark-internet-1: "194.33.192.0/25"
    ark-internet-2: "194.33.196.0/25"
    global-protect: "35.176.93.186/32"

generic-prometheus-alerts:
  targetApplication: manage-a-workforce-ui
  alertSeverity: hmpps-tier
