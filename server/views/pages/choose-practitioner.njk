{% extends "partials/layout.njk" %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/breadcrumbs/macro.njk" import govukBreadcrumbs %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/label/macro.njk" import govukLabel %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "../components/pop/macro.njk" import pop %}
{% from "govuk/components/notification-banner/macro.njk" import govukNotificationBanner %}

{% set tableData = {
    attributes: {
    'data-module': 'moj-natural-sortable-table'
    },
    head: [
        { text: 'Name',
            attributes: {
                "aria-sort": "none"
            }
        },
        { text: 'Grade',
            attributes: {
                "aria-sort": "descending"
            }
        },
        { text: 'Workload %',
            format: "numeric",
            attributes: {
                "aria-sort": "none",
                "aria-sort-natural": "ascending"
            }
        },
        { text: 'Cases in past 7 days',
            format: "numeric",
            attributes: {
                "aria-sort": "none"
            }
        },
        { text: 'Community cases',
            format: "numeric",
            attributes: {
                "aria-sort": "none"
            }
        },
        { text: 'Custody cases',
            format: "numeric",
            attributes: {
                "aria-sort": "none"
            }
        },
        { text: 'Workload details' },
        { text: 'Select' }
    ],
    rows: []
} %}

{% for offenderManager in offenderManagersToAllocate %}
    {%- set tableRow = [
        { html: govukLabel({
            text: offenderManager.name,
            for: ('allocated-officer-' + offenderManager.code)
          }),
            attributes: {
                "data-sort-value": offenderManager.name
                }
        },
        { html: ('<div class="tooltip">' + offenderManager.grade + '<span class="tooltiptext">' + offenderManager.gradeTip + '</span></div>'),
            attributes: {
                "data-sort-value": offenderManager.gradeOrder
            }
        },
        { text: ((offenderManager.capacity | round(1)) + '%'),format: "numeric",
        classes: ('percentage-extra-over' if offenderManager.capacity > 100),
            attributes: {
                "data-sort-value": offenderManager.capacity
            }
        },
        { text: offenderManager.totalCasesInLastWeek, format: "numeric",
            attributes: {
                "data-sort-value": offenderManager.totalCasesInLastWeek
            }
        },
        { text: offenderManager.communityCases, format: "numeric",
            attributes: {
                "data-sort-value": offenderManager.communityCases
            }
        },
        { text: offenderManager.custodyCases, format: "numeric",
            attributes: {
                "data-sort-value": offenderManager.custodyCases
            }
        },
        { text: ('<a href="/team/'+ teamCode +'/' + crn + '/convictions/' + convictionId + '/allocate/' + offenderManager.code + '/officer-view" class="govuk-link--no-visited-state" aria-label="View">' + "View" + '</a>' ) | safe, classes: "govuk-!-text-align-centre"},
        { html: ('<div class="govuk-radios govuk-radios--small"><div class="govuk-radios__item"><input class="govuk-radios__input" id="allocated-officer-' + offenderManager.code + '" name="allocatedOfficer" type="radio" value="' + offenderManager.code + '"><label class="govuk-label govuk-radios__label" for="allocated-officer-' + offenderManager.code + '"></label></div></div>')
        if offenderManager.email}
    ] -%}
    {{ tableData.rows.push(tableRow) }}

{% endfor %}

{% set offenderManagerDetails = ' by ' + offenderManager.forenames + ' ' + offenderManager.surname + (' (' + offenderManager.grade + ')' if offenderManager.grade) if offenderManager%}

{% block beforeContent %}
    {{ govukBreadcrumbs({
        items: [
            {
                text: "Home"
            },
            {
                text: "Unallocated cases",
                href: "/team/" + teamCode + "/cases/unallocated"
            },
            {
                text: "Case details",
                href: "/team/" + teamCode + "/" + crn + "/convictions/" + convictionId + "/case-view"
            }
        ]
    }) }}
    {% if error %}
        {{ govukErrorSummary({
            titleText: "There is a problem",
            errorList: [
                {
                text: "Select a probation practitioner",
                href: "#select-probation-practitioner"
                }
            ]
        }) }}
    {% endif %}
{% endblock %}

    {% block content %}
    {% if missingEmail%}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-half">
             {{ govukNotificationBanner({
                 text: 'If you cannot select a probation practitioner, they\'ll need to update their email address in NDelius by contacting Service Desk.'
             }) }}
        </div>
    </div>
    {% endif %}

    {{ pop({name: name, crn: crn, tier: tier}) }}
    
    <hr class="govuk-section-break govuk-section-break--xl govuk-section-break--visible">

    <h2 class="govuk-heading-l">Allocate to a probation practitioner <br>in {{ teamName }}</h2>

    {% if (probationStatus == 'Currently managed' and offenderManagerDetails) or probationStatus == 'Previously managed' %}
        <div class="govuk-warning-text">
            <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
            <strong class="govuk-warning-text__text">
                <span class="govuk-warning-text__assistive">Warning</span>
                {% if probationStatus == 'Previously managed' %}
                {{ name }} was previously managed{{ offenderManagerDetails }}.
                {% else %}
                {{ name }} is currently managed{{ offenderManagerDetails }}.
                {% endif %}
            </strong>
        </div>
    {% endif %}

    {% if error %}
        <div class="govuk-form-group govuk-form-group--error">
            <p id="select-probation-practitioner" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span> Select a probation practitioner
            </p>
    {% endif %}
    <form method="post">
        <input type="hidden" name="_csrf" value="{{ csrfToken }}">
        {{ govukTable(tableData) }}
        <div class="govuk-button-group">
                {{ govukButton({
            text: 'Continue'
            }) }}
            <a class="govuk-button govuk-button--secondary" href="{{'/team/' + teamCode + '/' + crn + '/convictions/' + convictionId + '/choose-practitioner'}}">Clear selection </a>
        </div>
    </form>
    {% if error %}
        </div>
    {% endif %}

{% endblock %}

