{% extends "partials/layout.njk" %}
{%- from "moj/components/sub-navigation/macro.njk" import mojSubNavigation -%}
{% from "govuk/components/breadcrumbs/macro.njk" import govukBreadcrumbs %}
{%- from "govuk/components/fieldset/macro.njk" import govukFieldset -%}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{%- from "govuk/components/select/macro.njk" import govukSelect -%}
{%- from "govuk/components/input/macro.njk" import govukInput -%}
{%- from "govuk/components/button/macro.njk" import govukButton -%}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "../components/instructions/macro.njk" import instructions %}
{% from "../components/pop/macro.njk" import pop %}

{% set emailCheckbox %}
{{ govukCheckboxes({
    name: 'emailCopy',
    items: [{
        value: 'no',
        text: 'Tick the box if you do not want to receive a copy.',
        checked: confirmInstructionForm.emailCopy
    }],
    classes: 'govuk-checkboxes--small'
})}}
{% endset %}

{% block beforeContent %}
  {{ govukBreadcrumbs({
        items: [
            {
                text: "Home",
                href: "/pdu/" + pduCode + "/teams"
            },
            {
                text: "Unallocated cases",
                href: "/pdu/" + pduCode + "/find-unallocated"
            },
            {
                text: "Case details",
                href: "/pdu/" + pduCode + "/" + crn + "/convictions/" + convictionNumber + "/case-view"
            },
            {
                text: "Choose practitioner",
                href: "/pdu/" + pduCode + "/" + crn + "/convictions/" + convictionNumber + "/choose-practitioner"
            },
            {
                text: "Allocate to practitioner",
                href: "/pdu/" + pduCode + "/" + crn + "/convictions/" + convictionNumber + "/allocate/" + staffTeamCode + '/' + staffCode + "/allocate-to-practitioner"
            }
        ]
    }) }}
  {% if errors | length > 0 %}
    {{ govukErrorSummary({
          titleText: "There is a problem",
          errorList: errors
      }) }}
  {% endif %}
{% endblock %}

{% block content %}
  {{ pop({name: name, crn: crn, tier: tier}) }}

  <hr class="govuk-section-break govuk-section-break--xl govuk-section-break--visible">

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-one-half">
      <form data-validate-form="confirm-allocation" action="{{ '/pdu/' + pduCode + '/' + crn + '/convictions/' + convictionNumber + '/allocate/' + staffTeamCode + '/' + staffCode + '/confirm-allocation' }}" method="POST">
        <div class="govuk-form-group">
          <input type="hidden" name="_csrf" value="{{ csrfToken }}">
          {{
            instructions({
                titleText: "Review your allocation notes",
                html: ('<p><br>ese notes will be sent in the allocation emailTh to <strong>' + data.staff.name.combinedName + '</strong> (<em>' + data.staff.email + '</em>).</p><div class="govuk-!-margin-bottom-5">' + emailCheckbox + '</div>') | safe,
                convictionNumber: convictionNumber,
                hintText: ' ',
                crn: crn,
                inGridRow: false,
                rows: 20,
                errorMessage: errors | findError('instructions')
            })
            }}
        </div>
        <div class="govuk-form-group">
        {% if confirmInstructionForm.person.length === 0 %}
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
            <h3 class="govuk-fieldset__heading">Does this contain sensitive information?</h3>
        </legend>
        <p class="govuk-hint">This is information that would cause harm or undermine the investigation of a crime if it were disclosed to a person on probation. For example, a victim's personal details.</p>
        {{ govukCheckboxes({
            name: 'isSensitive',
            items: [{
                text: 'Yes, it contains sensitive information',
                value: 'yes',
                checked: confirmInstructionForm.isSensitive
                }],
            classes: 'govuk-checkboxes--medium margin-bottom-10'
        })}}

        {% call govukFieldset({
          classes: 'moj-add-another__item',
              legend: {
                text: 'Add another recipient',
                classes: 'moj-add-another__title govuk-fieldset__legend--m',
                isPageHeading: false
              }
            }) %}
            <noscript>
              {{ govukInput({
              id: 'person[0][email]',
              name: 'person[0][email]',
              label: {
                text: 'Email address',
                classes: 'govuk-!-font-weight-bold'
              },
              type: "email",
              autocomplete: "email",
              spellcheck: false
            }) }}
            </noscript>
            {{ govukSelect({
              id: 'person[0][email]',
              name: 'person[0][emailPlaceholder]',
              items: [],
              classes: 'hidden',
              label: {
                text: 'Email address',
                classes: 'govuk-!-font-weight-bold'
              }
            }) }}

            {% endcall %}
            {% endif %}
            {% for person in confirmInstructionForm.person %}

              {% call govukFieldset({
                classes: 'moj-add-another__item',
                legend: {
                  text: 'Add another recipient',
                  classes: 'moj-add-another__title govuk-fieldset__legend--m',
                  isPageHeading: false
                }
              }) %}

                {% if confirmInstructionForm.person.length > 1 %}
                {{ govukButton({
                    text: 'Remove',
                    type: 'submit',
                    name: 'remove',
                    value: loop.index0,
                    classes: 'govuk-button govuk-button--secondary  moj-add-another__remove-button'
                  }) }}
                {% endif %}
                
                <noscript>
                  {{ govukInput({
                  id: 'person[' +loop.index0 +'][email]',
                  name: 'person[' +loop.index0 +'][email]',
                  label: {
                    text: 'Email address',
                    classes: 'govuk-!-font-weight-bold'
                  },
                  type: "email",
                  autocomplete: "email",
                  spellcheck: false,
                  value: person.email,
                  errorMessage: errors | findError('person[' +loop.index0 +'][email]')
                }) }}
                </noscript>

                {{ govukSelect({
                  id: 'person[' +loop.index0 +'][email]',
                  name: 'person[' +loop.index0 +'][emailPlaceholder]',
                  classes: 'hidden',
                  label: {
                    text: 'Email address',
                    classes: 'govuk-!-font-weight-bold'
                  },
                  items: [ {
                    value: person.email,
                    text: person.email,
                    selected: true
                  }],
                  errorMessage: errors | findError('person[' +loop.index0 +'][email]')
                }) }}

              {% endcall %}

            {% endfor %}

            <div class="moj-button-action">
                  {{ govukButton({
                    text: 'Add another person',
                    type: 'submit',
                    name: 'action',
                    value: 'add-another-person',
                    classes: 'govuk-button--secondary govuk-!-margin-bottom-4 govuk-!-margin-top-3'
                  }) }}
            </div>


            <div class="govuk-button-group">
                {{
                    govukButton({
                        text: 'Allocate case',
                        classes: 'allocate',
                        type: 'submit',
                        name: 'action',
                        value: 'continue',
                        preventDoubleClick: true,
                        attributes: {
                            id: convictionNumber,
                            'data-form-submit': undefined
                        }
                    })
                }}
                <a class="govuk-link" href="{{ '/pdu/' + pduCode + '/' + crn + '/convictions/' + convictionNumber + '/choose-practitioner' }}">Cancel</a>
          
        </div>
      </form>
    </div>
  </div>    
</div>

{% endblock %}


{% block javascripts %}
    <script src="/assets/accessible-autocomplete.min.js"></script>
    <script id="autocomplete-script" src="/assets/js/autocomplete-email.js" {%- if scrollToBottom %} data-scroll-to-bottom="true" {% endif %}></script>
    <script src="/assets/validator.js"></script>
    <script src="/assets/validation.js"></script>
{% endblock %}
