{% extends "../partials/allocation-view.njk" %}
{%- from "govuk/components/warning-text/macro.njk" import govukWarningText -%}
{%- from "govuk/components/select/macro.njk" import govukSelect -%}
{%- from "govuk/components/button/macro.njk" import govukButton -%}
{%- from "govuk/components/table/macro.njk" import govukTable -%}
{%- from "../components/doubleCell/macro.njk" import doubleCell -%}
{%- from "../components/unallocatedCaseLink/macro.njk" import unallocatedCaseLink -%}

{% set tableData = {
    attributes: {
        'data-module': 'moj-sortable-table',
        'data-persistent-id': 'find-unallocated-cases'
    },
    head: [
        { text: 'Name / CRN',
            attributes: {
                "aria-sort": "none",
                'data-persistent-id': 'find-unallocated-cases-name-crn'
            }
        },
        { text: 'Tier',
            attributes: {
                "aria-sort": "none",
                'data-persistent-id': 'find-unallocated-cases-tier'
            }
        },
        { text: 'Sentence date',
            attributes: {
                "aria-sort": "none",
                'data-persistent-id': 'find-unallocated-cases-sentence-date',
                "data-type": 'DATE'
            }
        },
        { text: 'COM handover',
            attributes: {
                "aria-sort": "none",
                'data-persistent-id': 'find-unallocated-cases-handover-date',
                "data-type": 'DATE'
            }
        },
        { text: 'Initial appointment',
            attributes: {
                "aria-sort": "none",
                'data-persistent-id': 'find-unallocated-cases-appointment-date',
                "data-type": 'DATE'
            }
        },
        { text: 'Probation status',
            attributes: {
                "aria-sort": "none",
                'data-persistent-id': 'find-unallocated-cases-probation-status'
            }
        }
    ],
    rows: []
} %}

{% for item in unallocatedCases %}
  {% if item.apopExcluded == true %}
    {%- set tableRow = [
            {
                text: unallocatedCaseLink(item, pduCode),
                attributes: { "data-sort-value": item.crn }
            },
            { text: 'This is a restricted access case. Check NDelius if you require access or further information.', attributes: { "data-sort-value": item.tierOrder }, colspan: 5 }
        ] -%}
  {% elif item.outOfAreaTransfer === true %}
    {%- set tableRow = [
      {
          text: unallocatedCaseLink(item, pduCode),
          attributes: { "data-sort-value": item.crn }
      },
      { text: item.tier, attributes: { "data-sort-value": item.tierOrder } },
      { text: (item.sentenceDate | dateFormat), attributes: {
          "data-sort-value": item.sentenceDate
      } },
      { text: item.handoverDate, attributes: { "data-sort-value": item.handoverDate } },
      {
          colspan: "2",
          text: 'This case is sitting in a different area, and the transfer process must be completed in NDelius before it can be allocated through the service. You can still review the case details.', attributes: { "data-sort-value": item.tierOrder }
      }
    ] -%}
  {% else %}
    {%- set tableRow = [
            {
                text: unallocatedCaseLink(item, pduCode),
                attributes: { "data-sort-value": item.crn }
            },
            { text: item.tier, attributes: { "data-sort-value": item.tierOrder } },
            { text: (item.sentenceDate | dateFormat), attributes: {
                "data-sort-value": item.sentenceDate
            } },
            { text: item.handoverDate, attributes: { "data-sort-value": item.handoverDate } },
            {
                text: doubleCell(item.primaryInitialAppointment,item.secondaryInitialAppointment, 'maw-secondary' ),
                attributes: { "data-sort-value": item.primaryInitialAppointment }
            },
            { text: doubleCell(item.primaryStatus, item.secondaryStatus, 'govuk-body-s')}
        ] -%}

  {% endif %}

  {{ tableData.rows.push(tableRow) }}
{% endfor %}

{% block allocationContent %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <h2 class="govuk-heading-l">Unallocated cases</h2>
      <div class="govuk-filter-background govuk-!-margin-bottom-7">
        <div class="moj-filter__selected-heading">
          <div class="moj-filter__heading-title">
            <h2 class="govuk-heading-m">What types of case can I allocate?</h2>
            <p>You can allocate court-to-community and custody-to-community cases, but they may sit in separate teams.</p>
            <p>Use the filters to select a team containing cases awaiting allocation. Select ‘Save and view selection’.</p>
          </div>
        </div>

        <form method="post">
          <input type="hidden" name="_csrf" value="{{ csrfToken }}">

          {{ govukSelect({
                  id: "pdu",
                  name: "pdu",
                  classes: "govuk-select--overflow",
                  formGroup: {
                    classes: "govuk-select--inline"
                  },
                  label: {
                    text: "Probation delivery unit (PDU)"
                  },
                  items: pduOptions,
                  errorMessage: errors | findError('pdu')
                })
                }}

          {{ govukSelect({
                  id: "ldu",
                  name: "ldu",
                  classes: "govuk-select--overflow",
                  formGroup: {
                    classes: "govuk-select--inline"
                  },
                  label: {
                    text: "Local admin unit (LAU)"
                  },
                  items: lduOptions,
                  errorMessage: errors | findError('ldu')
                })
                }}

          {{ govukSelect({
                  id: "team",
                  name: "team",
                  classes: "govuk-select--overflow",
                  formGroup: {
                    classes: "govuk-select--inline"
                  },
                  label: {
                    text: "Team"
                  },
                  items: teamOptions,
                  errorMessage: errors | findError('team')
                })
                }}

          <div class="govuk-button-group">
            {{ govukButton({
                      id: "continueButton",
                      text: "Save and view selection"
                  }) }}
            <a class="govuk-link" href="/pdu/{{pduDetails.code}}/clear-find-unallocated">Clear filter</a>
          </div>
        </form>
      </div>
    </div>
  </div>
  <div class="moj-scrollable-pane govuk-!-margin-bottom-9">
    <div class="moj-scrollable-pane__wrapper">
      {% if casesLength %}
        {{ govukTable(tableData) }}
      {% elif teamSelected %}
        <p class="govuk-body-l">
                There are no cases currently awaiting allocation.
              </p>
      {% endif %}
    </div>
  </div>

{% endblock %}

{% block javascripts %}
  <script nonce="{{ cspNonce }}">
    var dropDownSelectionData = {{ dropDownSelectionData | safe }}
    window.onload = function () {
      var pduSelect = document.getElementById("pdu")
      var lduSelect = document.getElementById("ldu")
      var teamSelect = document.getElementById("team")

      pduSelect.onchange = function () {
        lduSelect.length = 1
        teamSelect.length = 1
        if (this.value) {
          Object
            .entries(dropDownSelectionData[this.value].ldus)
            .sort(
              ([
              aKey, aValue
            ], [bKey, bValue]) => aValue.name >= bValue.name
              ? 1
              : -1)
            .forEach(([key, value]) => lduSelect.options[lduSelect.options.length] = new Option(value.name, key))
        }
      }

      lduSelect.onchange = function () {
        teamSelect.length = 1
        if (this.value) {
          dropDownSelectionData[pduSelect.value]
            .ldus[this.value]
            .teams
            .sort(
              (a, b) => a.name >= b.name
              ? 1
              : -1)
            .forEach(team => teamSelect.options[teamSelect.options.length] = new Option(team.name, team.code))
        }
      }

    }
  </script>
{% endblock %}
