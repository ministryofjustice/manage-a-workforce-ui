<!DOCTYPE html>
<html lang="en" class="govuk-template no-js">
<head>

  {%- from "components/primary-nav/macro.njk" import mawPrimaryNav -%}
  {%- from "govuk/components/notification-banner/macro.njk" import govukNotificationBanner -%}
  {% from "govuk/components/button/macro.njk" import govukButton %}

  {% for js in feComponents.jsIncludes %}
    <script src="{{ js }}" nonce="{{ cspNonce }}"></script>
  {% endfor %}

  {% for css in feComponents.cssIncludes %}
    <link href="{{ css }}" nonce="{{ cspNonce }}" rel="stylesheet" />
  {% endfor %}


  {% set mainTitle = "Allocations" %}

  {% block head %}
    <meta charset="utf-8"/>

    <title>{{ title }}</title>

    {% if tagManagerContainerId %}
    <!-- Google Tag Manager (noscript) -->
    <noscript>
      <iframe src="https://www.googletagmanager.com/ns.html?id={{tagManagerContainerId}} | safe }}"height="0" width="0" style="display:none;visibility:hidden"></iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->
    {% endif %}

    <script nonce="{{ cspNonce }}">
      !function (T, l, y) {
        var S = T.location,
          k = "script",
          D = "instrumentationKey",
          C = "ingestionendpoint",
          I = "disableExceptionTracking",
          E = "ai.device.",
          b = "toLowerCase",
          w = "crossOrigin",
          N = "POST",
          e = "appInsightsSDK",
          t = y.name || "appInsights";
        (y.name || T[e]) && (T[e] = t);
        var n = T[t] || function (d) {
          var g = !1,
            f = !1,
            m = {
              initialize: !0,
              queue: [],
              sv: "5",
              version: 2,
              config: d
            };
          function v(e, t) {
            var n = {},
              a = "Browser";
            return n[E + "id"] = a[b](),
              n[E + "type"] = a,
              n["ai.operation.name"] = S && S.pathname || "_unknown_",
              n["ai.internal.sdkVersion"] = "javascript:snippet_" + (
                m.sv || m.version), {
              time: function () {
                var e = new Date;
                function t(e) {
                  var t = "" + e;
                  return 1 === t.length && (t = "0" + t),
                    t
                }
                return e.getUTCFullYear() + "-" + t(1 + e.getUTCMonth()) + "-" + t(e.getUTCDate()) + "T" + t(e.getUTCHours()) + ":" + t(e.getUTCMinutes()) + ":" + t(e.getUTCSeconds()) + "." + (
                  (e.getUTCMilliseconds() / 1e3).toFixed(3) + "").slice(2, 5) + "Z"
              }(),
              iKey: e,
              name: "Microsoft.ApplicationInsights." + e.replace(/-/g, "") + "." + t,
              sampleRate: 100,
              tags: n,
              data: {
                baseData: {
                  ver: 2
                }
              }
            }
          }
          var h = d.url || y.src;
          if (h) {
            function a(e) {
              var t,
                n,
                a,
                i,
                r,
                o,
                s,
                c,
                u,
                p,
                l;
              g = !0,
                m.queue = [],
              f || (
                f = !0, t = h, s = function () {
                  var e = {},
                    t = d.connectionString;
                  if (t)
                    for (var n = t.split(";"), a = 0; a < n.length; a++) {
                      var i = n[a].split("=");
                      2 === i.length && (e[i[0][b]()] = i[1])
                    }
                  if (!e[C]) {
                    var r = e.endpointsuffix,
                      o = r
                        ? e.location
                        : null;
                    e[C] = "https://" + (
                      o
                        ? o + "."
                        : "") + "dc." + (
                      r || "services.visualstudio.com")
                  }
                  return e
                }(), c = s[D] || d[D] || "", u = s[C], p = u
                  ? u + "/v2/track"
                  : d.endpointUrl,
                  (l = []).push((n = "SDK LOAD Failure: Failed to load Application Insights SDK script (See stack for details)", a = t, i = p, (o = (r = v(c, "Exception")).data).baseType = "ExceptionData", o.baseData.exceptions = [
                    {
                      typeName: "SDKLoadFailed",
                      message: n.replace(/\./g, "-"),
                      hasFullStack: !1,
                      stack: n + "\nSnippet failed to load [" + a + "] -- Telemetry is disabled\nHelp Link: https://go.microsoft.com/fwlink/?linkid=2128109\nHost: " + (
                        S && S.pathname || "_unknown_") + "\nEndpoint: " + i,
                      parsedStack: []
                    }
                  ], r)),
                  l.push(function (e, t, n, a) {
                    var i = v(c, "Message"),
                      r = i.data;
                    r.baseType = "MessageData";
                    var o = r.baseData;
                    return o.message = 'AI (Internal): 99 message:"' + (
                      "SDK LOAD Failure: Failed to load Application Insights SDK script (See stack for details) (" + n + ")").replace(/\"/g, "") + '"',
                      o.properties = {
                        endpoint: a
                      },
                      i
                  }(0, 0, t, p)),
                  function (e, t) {
                    if (JSON) {
                      var n = T.fetch;
                      if (n && !y.useXhr)
                        n(t, {
                          method: N,
                          body: JSON.stringify(e),
                          mode: "cors"
                        });
                      else if (XMLHttpRequest) {
                        var a = new XMLHttpRequest;
                        a.open(N, t),
                          a.setRequestHeader("Content-type", "application/json"),
                          a.send(JSON.stringify(e))
                      }
                    }
                  }(l, p))
            }
            function i(e, t) {
              f || setTimeout(function () {
                !t && m.core || a()
              }, 500)
            }
            var e = function () {
              var n = l.createElement(k);
              n.src = h;
              var e = y[w];
              return !e && "" !== e || "undefined" == n[w] || (n[w] = e),
                n.onload = i,
                n.onerror = a,
                n.onreadystatechange = function (e, t) {
                  "loaded" !== n.readyState && "complete" !== n.readyState || i(0, t)
                },
                n
            }();
            y.ld < 0
              ? l
                .getElementsByTagName("head")[0]
                .appendChild(e)
              : setTimeout(function () {
                l
                  .getElementsByTagName(k)[0]
                  .parentNode
                  .appendChild(e)
              }, y.ld || 0)
          }
          try {
            m.cookie = l.cookie
          } catch (p) {}
          function t(e) {
            for (; e.length;)
              !function (t) {
                m[t] = function () {
                  var e = arguments;
                  g || m
                    .queue
                    .push(function () {
                      m[t].apply(m, e)
                    })
                }
              }
              (e.pop())
          }
          var n = "track",
            r = "TrackPage",
            o = "TrackEvent";
          t([
            n + "Event",
            n + "PageView",
            n + "Exception",
            n + "Trace",
            n + "DependencyData",
            n + "Metric",
            n + "PageViewPerformance",
            "start" + r,
            "stop" + r,
            "start" + o,
            "stop" + o,
            "addTelemetryInitializer",
            "setAuthenticatedUserContext",
            "clearAuthenticatedUserContext",
            "flush"
          ]),
            m.SeverityLevel = {
              Verbose: 0,
              Information: 1,
              Warning: 2,
              Error: 3,
              Critical: 4
            };
          var s = (d.extensionConfig || {}).ApplicationInsightsAnalytics || {};
          if (!0 !== d[I] && !0 !== s[I]) {
            var c = "onerror";
            t(["_" + c]);
            var u = T[c];
            T[c] = function (e, t, n, a, i) {
              var r = u && u(e, t, n, a, i);
              return !0 !== r && m["_" + c]({message: e, url: t, lineNumber: n, columnNumber: a, error: i}),
                r
            },
              d.autoExceptionInstrumented = !0
          }
          return m
        }(y.cfg);
        function a() {
          y.onInit && y.onInit(n)
        }(T[t] = n).queue && 0 === n.queue.length
          ? (n.queue.push(a), n.trackPageView({}))
          : a()
      }(window, document, {
        src: "https://js.monitor.azure.com/scripts/b/ai.2.min.js", // The SDK URL Source
        crossOrigin: "anonymous", // When supplied this will add the provided value as the cross origin attribute on the script tag
        cfg: { // Application Insights Configuration
          instrumentationKey: "{{ instrumentationKey }}",
          ingestionendpoint: 'https://northeurope-0.in.applicationinsights.azure.com/',
          liveendpoint: 'https://northeurope.livediagnostics.monitor.azure.com/',
          autoTrackPageVisitTime: true
        }
      });

      window.appInsights = appInsights

      appInsights
        .queue
        .push(function () {
          appInsights.addTelemetryInitializer(function (envelope) {
            envelope.tags["ai.cloud.role"] = "manage-a-workforce-ui";
          })
        })
    </script>

    <!-- Google Tag Manager -->
    <script nonce="{{ cspNonce }}">
      window.dataLayer = window.dataLayer || [];
    </script>
    {% if tagManagerContainerId %}
    <script nonce="{{ cspNonce }}">
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({'gtm.start': new Date().getTime(), event: 'gtm.js'});
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer'
            ? '&l=' + l
            : '';
        j.async = true;
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
        f
          .parentNode
          .insertBefore(j, f);
      })(window, document, 'script', 'dataLayer', '{{tagManagerContainerId}}');
    </script>
    {% endif %}
    <link href="/assets/govuk/govuk-frontend.min.css" rel="stylesheet"/>
    <link href="/assets/stylesheets/application.css?{{ version }}" rel="stylesheet"/>

    <!--[if lt IE 9]>
    <script src="/assets/js/html5shiv-3.7.3.min.js"></script>
    <![endif]-->

    <script src="/assets/js/jquery.min.js"></script>
    <script src="/assets/jquery-ui.min.js"></script>

    <link href="/assets/themes/ui-lightness/jquery-ui.css" rel="stylesheet"/>

  {% endblock %}
</head>
<body class="govuk-frontend-supported govuk-template__body">

<script>
  document
    .body
    .classList
    .add('js-enabled')
</script>

<a href="#main-content" class="govuk-skip-link">Skip to main content</a>

{% block bodyStart %}{% endblock %}

{% block header %}
    {{ feComponents.header | safe }}
{% endblock %}

{% block technicalUpdatesBanner %}

  <div class="govuk-grid-row technical-updates-banner moj-hidden" id="technical-updates-banner" data-banner-version="{{ lastTechnicalUpdate }}">
    <div class="govuk-grid-column-full">
      <div class="govuk-width-container govuk-body technical-updates-container">
        <div class="technical-updates-content">
          <strong class="technical-updates-whats-new">
            New features
          </strong>
          <span>
            We’re updating the service all the time, <a class="govuk-link govuk-link--inverse" href="/whats-new">find out more on the What’s new page.</a>
                            </span>
        </div>
        <a id="hide-message" class="technical-updates-hide-message govuk-link govuk-link--inverse" href="#" aria-current="page">Hide message</a>
      </div>
    </div>
  </div>

{% endblock %}

{% block phaseBanner %}
  <div class="govuk-width-container">
    {% from "govuk/components/phase-banner/macro.njk" import govukPhaseBanner %}
    {{ govukPhaseBanner({
      tag: {
        text: "Beta"
      },
      classes: 'maw-no-border',
      html: 'This is a new service – <a class="govuk-link feedback" href="https://www.smartsurvey.co.uk/s/AWQG5Z?url=' + pageUrl + '" target="_blank" rel="noopener noreferrer">your feedback</a> will help us to improve it.'
    }) }}
  </div>
{% endblock %}

{% block navigation %}
  {{ mawPrimaryNav({unallocatedCaseCount: unallocatedCaseCount, featureFlag: featureFlag }) }}
{% endblock %}

<div class="govuk-width-container">
  {% block beforeContent %}{% endblock %}

  <main class="govuk-main-wrapper" id="main-content" role="main">
    {% block notificationBannner %}
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
          {% if notification.active === 'true' %}
            {% set html %}
              <p class="govuk-notification-banner__heading">The service is experiencing technical issues, and you may have limited access.
              </p>
            {% endset %}

            {{ govukNotificationBanner({
              html: html
            }) }}
          {% endif %}
        </div>
      </div>
    {% endblock %}

    {% block content %}{% endblock %}
  </main>
</div>

<div class="govuk-width-container">
  <div class="govuk-width-row feedback-prompt">
    <h2 class="feedback-prompt-text feedback-container">
      <div class="govuk-label govuk-label--s">Is this page useful?</div>
      <a id="feedbackYes" href="{{ "https://www.smartsurvey.co.uk/s/WQFIXP?url=" + pageUrl }}" class="govuk-button govuk-button--secondary" target="_blank">Yes</a>
      <a id="feedbackNo" href="{{ "https://www.smartsurvey.co.uk/s/DDLZ5O?url=" + pageUrl }}" class="govuk-button govuk-button--secondary" target="_blank">No</a>
    </h2>
  </div>
</div>

{% block footer %}
    {{ feComponents.footer | safe }}
{% endblock %}

{% block bodyEnd %}
  <script type="module" src="/assets/govuk/govuk-frontend.min.js"></script>
  <script type="module" src="/assets/govukFrontendInit.js"></script>
  <script src="/assets/moj/all.js"></script>
  <script src="/assets/naturalSortableTable.js"></script>
  <script src="/assets/mojSortableTable.js"></script>
  <script src="/assets/mojFrontendInit.js"></script>
  <script src="/assets/technical-updates.js"></script>
{% endblock %}

{% block javascripts %}{% endblock %}

</body>
</html>
